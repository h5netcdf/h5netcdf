name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - created

jobs:
  lint:
    name: lint and style checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
      - name: Lint with flake8
        run: |
          flake8 .
      - name: Black style check
        run: |
          black --check .
      - name: Isort import check
        run: |
          isort --check .

  build_0:
    name: h5py2 tests
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Install micromamba environment
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-name: h5netcdf-tests
        extra-specs: |
          python=${{ matrix.python-version }}
          pip
          pytest
          wheel
          h5py=2.10.0
          netCDF4=1.5.5.1
    - name: Install h5netcdf
      run: |
        python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv
    - name: Test with pytest
      run: |
        pytest -v --durations=0 h5netcdf/tests/

  build_1:
    name: h5py3 tests
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - name: Install micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-name: h5netcdf-tests
        extra-specs: |
          python=${{ matrix.python-version }}
          pip
          pytest
          wheel
          netCDF4
    - name: Install h5netcdf
      run: |
        python -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv
    - name: Test with pytest
      run: |
        pytest -v --durations=0 h5netcdf/tests/

  upload-pypi:
    if: github.event_name == 'release'
    needs: [lint, build_0, build_1]
    name: deploy to pypi
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Package and Upload
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel --universal
          twine upload dist/*
