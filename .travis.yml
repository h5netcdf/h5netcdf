language: minimal
sudo: false # use container based build
notifications:
  email: false

matrix:
  include:
  - env: PYTHON_VERSION=3.6 H5PYD_VERSION=v0.6.0
  - env: PYTHON_VERSION=3.7 H5PYD_VERSION=v0.6.0
  - env: PYTHON_VERSION=3.8 H5PYD_VERSION=v0.6.0

before_install:
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

install:
  - conda create -c conda-forge --yes -n test_env python=$PYTHON_VERSION pip pytest h5py$H5PY_VERSION cython netCDF4
  - source activate test_env
  - python setup.py install
  - curl ${HS_ENDPOINT}/about && export WITHRESTAPI=--restapi
  - if [ -n "${WITHRESTAPI}" ]; then
      pip install requests pytz ;
      pip install git+https://github.com/HDFGroup/h5pyd.git@${H5PYD_VERSION} ;
      export H5PYD_TEST_FOLDER=${TEST_BASE_DIR}/h5pyd_test/${PYTHON_VERSION} ;
    fi
  - conda list

script:
  - echo python_version ${PYTHON_VERSION}
  - echo endpoint ${HS_ENDPOINT}
  - echo test folder ${H5PYD_TEST_FOLDER}
  - if [ -n "${HS_USERNAME}" ]; then
      echo username IS defined;
    else
      echo username IS NOT defined;
    fi
  - if [ -n "${HS_PASSWORD}" ]; then
      echo password IS defined;
    else
      echo password IS NOT defined;
    fi
  - echo withrestapi ${WITHRESTAPI}
  - py.test -v ${WITHRESTAPI} h5netcdf/
